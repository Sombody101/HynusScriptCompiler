//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from f:/HynusScriptCompiler/HynusScriptCompiler/ANTLRScripts/HScript.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class HScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, WHILE=40, BOOL_OPERATOR=41, BINARY=42, HEX=43, UINTEGER=44, 
		FLOAT=45, INTEGER=46, STRING=47, CHAR=48, BYTE=49, BOOL=50, NULL=51, AND=52, 
		OR=53, XOR=54, FUNCTIONDEC=55, SCRIPTATTR=56, VERSIONSTR=57, COMMENT=58, 
		MLCOMMENT=59, WHITESPACE=60, IDENTIFIER=61;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "WHILE", "BOOL_OPERATOR", 
		"BINARY", "HEX", "UINTEGER", "FLOAT", "INTEGER", "STRING", "CHAR", "BYTE", 
		"ESC_SEQ", "UNICODE", "U_HEX", "BOOL", "NULL", "AND", "OR", "XOR", "FUNCTIONDEC", 
		"SCRIPTATTR", "VERSIONSTR", "COMMENT", "MLCOMMENT", "WHITESPACE", "IDENTIFIER"
	};


	public HScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public HScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'if'", "'('", "')'", "'else'", "'or'", "'='", "','", "'try'", 
		"'catch'", "'?'", "':'", "'$'", "'-'", "'+'", "'~'", "'!'", "'--'", "'++'", 
		"'*'", "'/'", "'%'", "'**'", "':!='", "':=='", "'=='", "'!='", "'>'", 
		"'<'", "'>='", "'<='", "'U'", "'u'", "'F'", "'f'", "'style'", "'default'", 
		"'{'", "'}'", null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, "'?>>'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, "WHILE", "BOOL_OPERATOR", "BINARY", "HEX", "UINTEGER", 
		"FLOAT", "INTEGER", "STRING", "CHAR", "BYTE", "BOOL", "NULL", "AND", "OR", 
		"XOR", "FUNCTIONDEC", "SCRIPTATTR", "VERSIONSTR", "COMMENT", "MLCOMMENT", 
		"WHITESPACE", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "HScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static HScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,61,473,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,1,0,1,0,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,
		5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
		11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,
		17,1,18,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,22,1,23,1,
		23,1,23,1,23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,
		27,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,
		33,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,
		36,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,
		39,1,39,1,39,3,39,250,8,39,1,40,1,40,1,40,3,40,255,8,40,1,41,1,41,1,41,
		1,41,3,41,261,8,41,1,41,4,41,264,8,41,11,41,12,41,265,1,42,1,42,1,42,1,
		42,3,42,272,8,42,1,42,4,42,275,8,42,11,42,12,42,276,1,43,1,43,1,43,1,44,
		1,44,1,44,1,44,1,45,4,45,287,8,45,11,45,12,45,288,1,46,1,46,1,46,5,46,
		294,8,46,10,46,12,46,297,9,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,
		1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,317,8,48,1,49,1,
		49,1,49,3,49,322,8,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,52,1,52,
		1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,1,52,
		1,52,1,52,3,52,350,8,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
		53,1,53,3,53,363,8,53,1,54,1,54,1,54,1,54,1,54,3,54,370,8,54,1,55,1,55,
		1,55,1,55,3,55,376,8,55,1,56,1,56,1,56,1,56,3,56,382,8,56,1,57,1,57,1,
		57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,399,
		8,57,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,3,59,412,8,
		59,3,59,414,8,59,1,60,1,60,1,60,3,60,419,8,60,1,60,5,60,422,8,60,10,60,
		12,60,425,9,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,5,61,434,8,61,10,61,
		12,61,437,9,61,1,61,1,61,1,61,1,61,1,61,1,61,1,61,5,61,446,8,61,10,61,
		12,61,449,9,61,1,61,1,61,3,61,453,8,61,1,61,1,61,1,62,4,62,458,8,62,11,
		62,12,62,459,1,62,1,62,1,63,3,63,465,8,63,1,63,1,63,5,63,469,8,63,10,63,
		12,63,472,9,63,2,435,447,0,64,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,
		19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
		43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,
		67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,
		91,46,93,47,95,48,97,49,99,0,101,0,103,0,105,50,107,51,109,52,111,53,113,
		54,115,55,117,56,119,57,121,58,123,59,125,60,127,61,1,0,11,2,0,48,49,95,
		95,4,0,48,57,65,70,95,95,97,102,2,0,85,85,117,117,2,0,48,57,95,95,2,0,
		34,34,92,92,8,0,34,34,47,47,92,92,98,98,102,102,110,110,114,114,116,116,
		3,0,48,57,65,70,97,102,2,0,10,10,13,13,3,0,9,13,32,32,65279,65279,3,0,
		65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,503,0,1,1,0,0,0,0,3,1,
		0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,
		15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
		0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,
		0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,
		1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
		0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,
		1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,
		0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,
		1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,105,1,0,0,0,0,107,1,0,
		0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,
		0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,
		0,0,1,129,1,0,0,0,3,131,1,0,0,0,5,134,1,0,0,0,7,136,1,0,0,0,9,138,1,0,
		0,0,11,143,1,0,0,0,13,146,1,0,0,0,15,148,1,0,0,0,17,150,1,0,0,0,19,154,
		1,0,0,0,21,160,1,0,0,0,23,162,1,0,0,0,25,164,1,0,0,0,27,166,1,0,0,0,29,
		168,1,0,0,0,31,170,1,0,0,0,33,172,1,0,0,0,35,174,1,0,0,0,37,177,1,0,0,
		0,39,180,1,0,0,0,41,182,1,0,0,0,43,184,1,0,0,0,45,186,1,0,0,0,47,189,1,
		0,0,0,49,193,1,0,0,0,51,197,1,0,0,0,53,200,1,0,0,0,55,203,1,0,0,0,57,205,
		1,0,0,0,59,207,1,0,0,0,61,210,1,0,0,0,63,213,1,0,0,0,65,215,1,0,0,0,67,
		217,1,0,0,0,69,219,1,0,0,0,71,221,1,0,0,0,73,227,1,0,0,0,75,235,1,0,0,
		0,77,237,1,0,0,0,79,249,1,0,0,0,81,254,1,0,0,0,83,260,1,0,0,0,85,271,1,
		0,0,0,87,278,1,0,0,0,89,281,1,0,0,0,91,286,1,0,0,0,93,290,1,0,0,0,95,300,
		1,0,0,0,97,316,1,0,0,0,99,318,1,0,0,0,101,323,1,0,0,0,103,329,1,0,0,0,
		105,349,1,0,0,0,107,362,1,0,0,0,109,369,1,0,0,0,111,375,1,0,0,0,113,381,
		1,0,0,0,115,398,1,0,0,0,117,400,1,0,0,0,119,404,1,0,0,0,121,418,1,0,0,
		0,123,452,1,0,0,0,125,457,1,0,0,0,127,464,1,0,0,0,129,130,5,59,0,0,130,
		2,1,0,0,0,131,132,5,105,0,0,132,133,5,102,0,0,133,4,1,0,0,0,134,135,5,
		40,0,0,135,6,1,0,0,0,136,137,5,41,0,0,137,8,1,0,0,0,138,139,5,101,0,0,
		139,140,5,108,0,0,140,141,5,115,0,0,141,142,5,101,0,0,142,10,1,0,0,0,143,
		144,5,111,0,0,144,145,5,114,0,0,145,12,1,0,0,0,146,147,5,61,0,0,147,14,
		1,0,0,0,148,149,5,44,0,0,149,16,1,0,0,0,150,151,5,116,0,0,151,152,5,114,
		0,0,152,153,5,121,0,0,153,18,1,0,0,0,154,155,5,99,0,0,155,156,5,97,0,0,
		156,157,5,116,0,0,157,158,5,99,0,0,158,159,5,104,0,0,159,20,1,0,0,0,160,
		161,5,63,0,0,161,22,1,0,0,0,162,163,5,58,0,0,163,24,1,0,0,0,164,165,5,
		36,0,0,165,26,1,0,0,0,166,167,5,45,0,0,167,28,1,0,0,0,168,169,5,43,0,0,
		169,30,1,0,0,0,170,171,5,126,0,0,171,32,1,0,0,0,172,173,5,33,0,0,173,34,
		1,0,0,0,174,175,5,45,0,0,175,176,5,45,0,0,176,36,1,0,0,0,177,178,5,43,
		0,0,178,179,5,43,0,0,179,38,1,0,0,0,180,181,5,42,0,0,181,40,1,0,0,0,182,
		183,5,47,0,0,183,42,1,0,0,0,184,185,5,37,0,0,185,44,1,0,0,0,186,187,5,
		42,0,0,187,188,5,42,0,0,188,46,1,0,0,0,189,190,5,58,0,0,190,191,5,33,0,
		0,191,192,5,61,0,0,192,48,1,0,0,0,193,194,5,58,0,0,194,195,5,61,0,0,195,
		196,5,61,0,0,196,50,1,0,0,0,197,198,5,61,0,0,198,199,5,61,0,0,199,52,1,
		0,0,0,200,201,5,33,0,0,201,202,5,61,0,0,202,54,1,0,0,0,203,204,5,62,0,
		0,204,56,1,0,0,0,205,206,5,60,0,0,206,58,1,0,0,0,207,208,5,62,0,0,208,
		209,5,61,0,0,209,60,1,0,0,0,210,211,5,60,0,0,211,212,5,61,0,0,212,62,1,
		0,0,0,213,214,5,85,0,0,214,64,1,0,0,0,215,216,5,117,0,0,216,66,1,0,0,0,
		217,218,5,70,0,0,218,68,1,0,0,0,219,220,5,102,0,0,220,70,1,0,0,0,221,222,
		5,115,0,0,222,223,5,116,0,0,223,224,5,121,0,0,224,225,5,108,0,0,225,226,
		5,101,0,0,226,72,1,0,0,0,227,228,5,100,0,0,228,229,5,101,0,0,229,230,5,
		102,0,0,230,231,5,97,0,0,231,232,5,117,0,0,232,233,5,108,0,0,233,234,5,
		116,0,0,234,74,1,0,0,0,235,236,5,123,0,0,236,76,1,0,0,0,237,238,5,125,
		0,0,238,78,1,0,0,0,239,240,5,119,0,0,240,241,5,104,0,0,241,242,5,105,0,
		0,242,243,5,108,0,0,243,250,5,101,0,0,244,245,5,117,0,0,245,246,5,110,
		0,0,246,247,5,116,0,0,247,248,5,105,0,0,248,250,5,108,0,0,249,239,1,0,
		0,0,249,244,1,0,0,0,250,80,1,0,0,0,251,255,3,109,54,0,252,255,3,111,55,
		0,253,255,3,113,56,0,254,251,1,0,0,0,254,252,1,0,0,0,254,253,1,0,0,0,255,
		82,1,0,0,0,256,257,5,48,0,0,257,261,5,98,0,0,258,259,5,48,0,0,259,261,
		5,66,0,0,260,256,1,0,0,0,260,258,1,0,0,0,261,263,1,0,0,0,262,264,7,0,0,
		0,263,262,1,0,0,0,264,265,1,0,0,0,265,263,1,0,0,0,265,266,1,0,0,0,266,
		84,1,0,0,0,267,268,5,48,0,0,268,272,5,120,0,0,269,270,5,48,0,0,270,272,
		5,88,0,0,271,267,1,0,0,0,271,269,1,0,0,0,272,274,1,0,0,0,273,275,7,1,0,
		0,274,273,1,0,0,0,275,276,1,0,0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,
		86,1,0,0,0,278,279,3,91,45,0,279,280,7,2,0,0,280,88,1,0,0,0,281,282,3,
		91,45,0,282,283,5,46,0,0,283,284,3,91,45,0,284,90,1,0,0,0,285,287,7,3,
		0,0,286,285,1,0,0,0,287,288,1,0,0,0,288,286,1,0,0,0,288,289,1,0,0,0,289,
		92,1,0,0,0,290,295,5,34,0,0,291,294,3,99,49,0,292,294,8,4,0,0,293,291,
		1,0,0,0,293,292,1,0,0,0,294,297,1,0,0,0,295,293,1,0,0,0,295,296,1,0,0,
		0,296,298,1,0,0,0,297,295,1,0,0,0,298,299,5,34,0,0,299,94,1,0,0,0,300,
		301,5,39,0,0,301,302,9,0,0,0,302,303,5,39,0,0,303,96,1,0,0,0,304,305,2,
		49,57,0,305,317,2,48,57,0,306,307,5,49,0,0,307,308,5,48,0,0,308,317,2,
		48,57,0,309,310,5,50,0,0,310,311,5,48,0,0,311,312,2,48,52,0,312,317,2,
		48,57,0,313,314,5,50,0,0,314,315,5,53,0,0,315,317,2,48,53,0,316,304,1,
		0,0,0,316,306,1,0,0,0,316,309,1,0,0,0,316,313,1,0,0,0,317,98,1,0,0,0,318,
		321,5,92,0,0,319,322,7,5,0,0,320,322,3,101,50,0,321,319,1,0,0,0,321,320,
		1,0,0,0,322,100,1,0,0,0,323,324,5,117,0,0,324,325,3,103,51,0,325,326,3,
		103,51,0,326,327,3,103,51,0,327,328,3,103,51,0,328,102,1,0,0,0,329,330,
		7,6,0,0,330,104,1,0,0,0,331,332,5,116,0,0,332,333,5,114,0,0,333,334,5,
		117,0,0,334,350,5,101,0,0,335,336,5,102,0,0,336,337,5,97,0,0,337,338,5,
		108,0,0,338,339,5,115,0,0,339,350,5,101,0,0,340,341,5,84,0,0,341,342,5,
		114,0,0,342,343,5,117,0,0,343,350,5,101,0,0,344,345,5,70,0,0,345,346,5,
		97,0,0,346,347,5,108,0,0,347,348,5,115,0,0,348,350,5,101,0,0,349,331,1,
		0,0,0,349,335,1,0,0,0,349,340,1,0,0,0,349,344,1,0,0,0,350,106,1,0,0,0,
		351,352,5,110,0,0,352,353,5,117,0,0,353,354,5,108,0,0,354,363,5,108,0,
		0,355,356,5,110,0,0,356,357,5,105,0,0,357,363,5,108,0,0,358,359,5,78,0,
		0,359,360,5,111,0,0,360,361,5,110,0,0,361,363,5,101,0,0,362,351,1,0,0,
		0,362,355,1,0,0,0,362,358,1,0,0,0,363,108,1,0,0,0,364,365,5,38,0,0,365,
		370,5,38,0,0,366,367,5,97,0,0,367,368,5,110,0,0,368,370,5,100,0,0,369,
		364,1,0,0,0,369,366,1,0,0,0,370,110,1,0,0,0,371,372,5,124,0,0,372,376,
		5,124,0,0,373,374,5,111,0,0,374,376,5,114,0,0,375,371,1,0,0,0,375,373,
		1,0,0,0,376,112,1,0,0,0,377,382,5,94,0,0,378,379,5,120,0,0,379,380,5,111,
		0,0,380,382,5,114,0,0,381,377,1,0,0,0,381,378,1,0,0,0,382,114,1,0,0,0,
		383,384,5,102,0,0,384,385,5,117,0,0,385,399,5,110,0,0,386,387,5,102,0,
		0,387,388,5,117,0,0,388,389,5,110,0,0,389,399,5,99,0,0,390,391,5,102,0,
		0,391,392,5,117,0,0,392,393,5,110,0,0,393,394,5,99,0,0,394,395,5,116,0,
		0,395,396,5,105,0,0,396,397,5,111,0,0,397,399,5,110,0,0,398,383,1,0,0,
		0,398,386,1,0,0,0,398,390,1,0,0,0,399,116,1,0,0,0,400,401,5,63,0,0,401,
		402,5,62,0,0,402,403,5,62,0,0,403,118,1,0,0,0,404,405,3,91,45,0,405,406,
		5,46,0,0,406,413,3,91,45,0,407,408,5,46,0,0,408,411,3,91,45,0,409,410,
		5,46,0,0,410,412,3,91,45,0,411,409,1,0,0,0,411,412,1,0,0,0,412,414,1,0,
		0,0,413,407,1,0,0,0,413,414,1,0,0,0,414,120,1,0,0,0,415,416,5,47,0,0,416,
		419,5,47,0,0,417,419,5,35,0,0,418,415,1,0,0,0,418,417,1,0,0,0,419,423,
		1,0,0,0,420,422,8,7,0,0,421,420,1,0,0,0,422,425,1,0,0,0,423,421,1,0,0,
		0,423,424,1,0,0,0,424,426,1,0,0,0,425,423,1,0,0,0,426,427,6,60,0,0,427,
		122,1,0,0,0,428,429,5,35,0,0,429,430,5,35,0,0,430,431,5,35,0,0,431,435,
		1,0,0,0,432,434,9,0,0,0,433,432,1,0,0,0,434,437,1,0,0,0,435,436,1,0,0,
		0,435,433,1,0,0,0,436,438,1,0,0,0,437,435,1,0,0,0,438,439,5,35,0,0,439,
		440,5,35,0,0,440,453,5,35,0,0,441,442,5,47,0,0,442,443,5,42,0,0,443,447,
		1,0,0,0,444,446,9,0,0,0,445,444,1,0,0,0,446,449,1,0,0,0,447,448,1,0,0,
		0,447,445,1,0,0,0,448,450,1,0,0,0,449,447,1,0,0,0,450,451,5,42,0,0,451,
		453,5,47,0,0,452,428,1,0,0,0,452,441,1,0,0,0,453,454,1,0,0,0,454,455,6,
		61,0,0,455,124,1,0,0,0,456,458,7,8,0,0,457,456,1,0,0,0,458,459,1,0,0,0,
		459,457,1,0,0,0,459,460,1,0,0,0,460,461,1,0,0,0,461,462,6,62,0,0,462,126,
		1,0,0,0,463,465,5,64,0,0,464,463,1,0,0,0,464,465,1,0,0,0,465,466,1,0,0,
		0,466,470,7,9,0,0,467,469,7,10,0,0,468,467,1,0,0,0,469,472,1,0,0,0,470,
		468,1,0,0,0,470,471,1,0,0,0,471,128,1,0,0,0,472,470,1,0,0,0,28,0,249,254,
		260,265,271,276,288,293,295,316,321,349,362,369,375,381,398,411,413,418,
		423,435,447,452,459,464,470,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
